//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppLogisticsModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AppLogisticsDBEntities : DbContext
    {
        public AppLogisticsDBEntities()
            : base("name=AppLogisticsDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AFP> AFP { get; set; }
        public virtual DbSet<BranchOffice> BranchOffice { get; set; }
        public virtual DbSet<EPS> EPS { get; set; }
        public virtual DbSet<MaritalStatus> MaritalStatus { get; set; }
        public virtual DbSet<Activity> Activity { get; set; }
        public virtual DbSet<Carrier> Carrier { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<ClientArea> ClientArea { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<Rate> Rate { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<VehicleType> VehicleType { get; set; }
        public virtual DbSet<Holding> Holding { get; set; }
    
        public virtual ObjectResult<Rate> Rate_GetRate(Nullable<int> clientId, Nullable<int> activityId, Nullable<int> vehicleTypeId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(int));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var vehicleTypeIdParameter = vehicleTypeId.HasValue ?
                new ObjectParameter("vehicleTypeId", vehicleTypeId) :
                new ObjectParameter("vehicleTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rate>("Rate_GetRate", clientIdParameter, activityIdParameter, vehicleTypeIdParameter);
        }
    
        public virtual ObjectResult<Rate> Rate_GetRate(Nullable<int> clientId, Nullable<int> activityId, Nullable<int> vehicleTypeId, MergeOption mergeOption)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(int));
    
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var vehicleTypeIdParameter = vehicleTypeId.HasValue ?
                new ObjectParameter("vehicleTypeId", vehicleTypeId) :
                new ObjectParameter("vehicleTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rate>("Rate_GetRate", mergeOption, clientIdParameter, activityIdParameter, vehicleTypeIdParameter);
        }
    }
}
